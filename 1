import tkinter as tk
from tkinter import messagebox, simpledialog
import csv
import os


# Функція для додавання нового контакту
def add_contact():
  name = name_entry.get()
  address = address_entry.get()
  email = email_entry.get()
  mobile_phone = mobile_entry.get()
  home_phone = home_entry.get()

  with open('contacts.csv', mode='a', newline='', encoding='utf-8') as file:
    writer = csv.writer(file)
    writer.writerow([name, address, email, mobile_phone, home_phone])

  messagebox.showinfo("Успіх", "Контакт успішно доданий")


# Функція для відображення існуючих контактів
def view_contacts():
  with open('contacts.csv', mode='r', encoding='utf-8') as file:
    reader = csv.reader(file)
    contacts = list(reader)
    contacts.sort(key=lambda x: x[0])  # Сортування контактів за ПІБ

  messagebox.showinfo("Контакти",
                      "\n".join([", ".join(contact) for contact in contacts]))


# Функція для видалення контакту
def delete_contact():
  name_to_delete = simpledialog.askstring(
      "Видалення контакту", "Введіть ПІБ контакту, якого бажаєте видалити:")
  with open('contacts.csv', mode='r', encoding='utf-8') as file:
    reader = csv.reader(file)
    contacts = list(reader)

  updated_contacts = [
      contact for contact in contacts if contact[0] != name_to_delete
  ]

  with open('contacts.csv', mode='w', newline='', encoding='utf-8') as file:
    writer = csv.writer(file)
    writer.writerows(updated_contacts)

  messagebox.showinfo("Успіх", "Контакт успішно видалений")


# Функція для пошуку контакту за параметрами
def search_contact():
  search_param = simpledialog.askstring(
      "Пошук контакту", "Введіть ПІБ або номер телефону для пошуку:")
  with open('contacts.csv', mode='r', encoding='utf-8') as file:
    reader = csv.reader(file)
    contacts = list(reader)

  found_contacts = [
      contact for contact in contacts if search_param in contact
      or search_param in contact[3] or search_param in contact[4]
  ]

  if found_contacts:
    messagebox.showinfo(
        "Знайдені контакти",
        "\n".join([", ".join(contact) for contact in found_contacts]))
  else:
    messagebox.showinfo("Пошук контакту", "Контакт не знайдений")


# Створення вікна
window = tk.Tk()
window.title("Телефонний довідник")

# Інтерфейс для введення даних нового контакту
tk.Label(window, text="ПІБ:").grid(row=0, column=0)
tk.Label(window, text="Адреса:").grid(row=1, column=0)
tk.Label(window, text="Електронна пошта:").grid(row=2, column=0)
tk.Label(window, text="Мобільний телефон:").grid(row=3, column=0)
tk.Label(window, text="Домашній телефон:").grid(row=4, column=0)

name_entry = tk.Entry(window)
name_entry.grid(row=0, column=1)
address_entry = tk.Entry(window)
address_entry.grid(row=1, column=1)
email_entry = tk.Entry(window)
email_entry.grid(row=2, column=1)
mobile_entry = tk.Entry(window)
mobile_entry.grid(row=3, column=1)
home_entry = tk.Entry(window)
home_entry.grid(row=4, column=1)

# Кнопка для додавання контакту
add_button = tk.Button(window, text="Додати контакт", command=add_contact)
add_button.grid(row=5, column=0, columnspan=2)

# Кнопка для перегляду контактів
view_button = tk.Button(window,
                        text="Переглянути контакти",
                        command=view_contacts)
view_button.grid(row=6, column=0, columnspan=2)

# Кнопка для видалення контакту
delete_button = tk.Button(window,
                          text="Видалити контакт",
                          command=delete_contact)
delete_button.grid(row=7, column=0, columnspan=2)

# Кнопка для пошуку контакту
search_button = tk.Button(window,
                          text="Пошук контакту",
                          command=search_contact)
search_button.grid(row=8, column=0, columnspan=2)

window.mainloop()
